#!/usr/bin/perl

use strict ;
use warnings;
use JSON::XS;
use HTTP::Date;
use IO::File;

use DBI qw(:sql_types);
use POSIX;

use CGI;
my $query = new CGI;
my $serial = lc($query->param('serial'));
if (!$serial) #default for running from the cmdline
{
        $serial = '0001000700ab';
}

my $config;
my $configfile = "config.pl";
        unless ($config = do $configfile) {
            die "couldn't parse $configfile: $@" if $@;
            die "couldn't do $configfile: $!"    unless defined $config;
            die "couldn't run $configfile"       unless $config;
        }
print "Access-Control-Allow-Origin: *\n";
print "Content-type: text/json\n\n"; 
my $json = JSON::XS->new->ascii->pretty->allow_nonref;

my ( $dbname , $host , $port , $dbusername , $dbpasswd,$filename,$timezone ) ; # Satisfy strict
$dbname=$config->{dbname};
$host=$config->{host};
$dbusername=$config->{dbusername};
$dbpasswd=$config->{dbpasswd};
$timezone=$config->{timezone};

my $datasource = "dbi:mysql:database=$dbname;host=$host";
#PERL DBI CONNECT
my $dbh =DBI->connect($datasource, $dbusername, $dbpasswd) || die "Could not connect to database: $DBI::errstr";
#PREPARE THE QUERY
my $best_days_query = qq(select watthours_today as etoday, date as update_time from daily_summaries where serial=? group by date order by watthours_today desc limit 10;);
my $best_output_query = qq(select update_time, watts_now as maxpower from power_statuses use index(date_idx) inner join (select max_power, date, date + interval 1 day as nextdate, serial from daily_summaries where serial=? order by max_power desc limit 5) as ds on ds.max_power=watts_now and update_time between ds.date and ds.nextdate and power_statuses.serial = ds.serial;);
my $best_days_qhandle = $dbh->prepare($best_days_query);
my $best_output_qhandle = $dbh->prepare($best_output_query);

my %high_scores;

my @best_days;
my @best_output;
	$best_days_qhandle->execute($serial);

	while( my $row = $best_days_qhandle->fetchrow_hashref ) {
	my @day_entry;
	
	push(@day_entry, ($row->{'update_time'}));   
	push(@day_entry, ($row->{'etoday'})); 
	
	
	push (@best_days, [@day_entry]);
	}
        $best_output_qhandle->execute($serial);
	while( my $row = $best_output_qhandle->fetchrow_hashref ) {
	my @power_entry;
	
	push(@power_entry, ($row->{'update_time'}) );     
	    
	push(@power_entry, $row->{'maxpower'}); 
	
	
	push (@best_output, [@power_entry]);
}
$high_scores{"best_days"} = \@best_days;
$high_scores{"best_output"} = \@best_output;
$dbh->disconnect();

#JSON OUTPUT
my $chart1_data_json=encode_json( \%high_scores );
print $chart1_data_json."\n";
